[
    {
        "type": "MacroNode",
        "macroname": "documentclass",
        "args": [
            {
                "type": "GroupNode",
                "delimiters": "('[', ']')",
                "children": [
                    "english"
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "article"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "amsmath,amssymb"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "fullpage"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "enumitem"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "multicol"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "float"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "kotex"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "listings"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            {
                "type": "GroupNode",
                "delimiters": "('[', ']')",
                "children": [
                    "dvipsnames"
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "xcolor"
                ]
            }
        ]
    },
    "\\n",
    {
        "type": "MacroNode",
        "macroname": "usepackage",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "graphicx"
                ]
            }
        ]
    },
    "\\n\\n\\n",
    {
        "type": "MacroNode",
        "macroname": "lstdefinelanguage",
        "args": []
    },
    {
        "type": "GroupNode",
        "delimiters": "('{', '}')",
        "children": [
            "Kotlin"
        ]
    },
    {
        "type": "GroupNode",
        "delimiters": "('{', '}')",
        "children": [
            "\\n  comment=[l]",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "//"
                ]
            },
            ",\\n  commentstyle=",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "color",
                        "args": [
                            null,
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "gray"
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "ttfamily",
                        "args": []
                    }
                ]
            },
            ",\\n  emph=",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "filter, first, firstOrNull, forEach, lazy, map, mapNotNull, println"
                ]
            },
            ",\\n  emphstyle=",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "color",
                        "args": [
                            null,
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "OrangeRed"
                                ]
                            }
                        ]
                    }
                ]
            },
            ",\\n  identifierstyle=",
            {
                "type": "MacroNode",
                "macroname": "color",
                "args": [
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "black"
                        ]
                    }
                ]
            },
            ",\\n  keywords=",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "!in, !is, abstract, actual, annotation, as, as?, break, by, catch, class, companion, const, constructor, continue, crossinline, data, delegate, do, dynamic, else, enum, expect, external, false, field, file, final, finally, for, fun, get, if, import, in, infix, init, inline, inner, interface, internal, is, lateinit, noinline, null, object, open, operator, out, override, package, param, private, property, protected, public, receiveris, reified, return, return@, sealed, set, setparam, super, suspend, tailrec, this, throw, true, try, typealias, typeof, val, var, vararg, when, where, while"
                ]
            },
            ",\\n  keywordstyle=",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "color",
                        "args": [
                            null,
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "NavyBlue"
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "bfseries",
                        "args": []
                    }
                ]
            },
            ",\\n  morecomment=[s]",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "/*"
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "*/"
                ]
            },
            ",\\n  morestring=[b]\",\\n  morestring=[s]",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "\"\"\"*"
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "*\"\"\""
                ]
            },
            ",\\n  ndkeywords=",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "@Deprecated, @JvmField, @JvmName, @JvmOverloads, @JvmStatic, @JvmSynthetic, Array, Byte, Double, Float, Int, Integer, Iterable, Long, Runnable, Short, String, Any, Unit, Nothing"
                ]
            },
            ",\\n  ndkeywordstyle=",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "color",
                        "args": [
                            null,
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "BurntOrange"
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "bfseries",
                        "args": []
                    }
                ]
            },
            ",\\n  sensitive=true,\\n  stringstyle=",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "color",
                        "args": [
                            null,
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "ForestGreen"
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "ttfamily",
                        "args": []
                    }
                ]
            },
            ",\\n"
        ]
    },
    "\\n\\n",
    {
        "type": "MacroNode",
        "macroname": "lstset",
        "args": []
    },
    {
        "type": "GroupNode",
        "delimiters": "('{', '}')",
        "children": [
            "language=kotlin"
        ]
    },
    " \\n\\n",
    {
        "type": "MacroNode",
        "macroname": "newcommand",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "handout",
                        "args": []
                    }
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('[', ']')",
                "children": [
                    "4"
                ]
            },
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "\\n   ",
                    {
                        "type": "MacroNode",
                        "macroname": "renewcommand",
                        "args": [
                            null,
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    {
                                        "type": "MacroNode",
                                        "macroname": "thepage",
                                        "args": []
                                    }
                                ]
                            },
                            null,
                            null,
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": []
                            }
                        ]
                    },
                    "\\n   ",
                    {
                        "type": "MacroNode",
                        "macroname": "noindent",
                        "args": []
                    },
                    {
                        "type": "EnvironmentNode",
                        "environmentname": "center",
                        "args": [],
                        "children": [
                            "\\n   ",
                            {
                                "type": "MacroNode",
                                "macroname": "framebox",
                                "args": []
                            },
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "\\n      ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "vbox",
                                        "args": []
                                    },
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "\\n    ",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "hbox",
                                                "args": []
                                            },
                                            "to 6in ",
                                            {
                                                "type": "GroupNode",
                                                "delimiters": "('{', '}')",
                                                "children": [
                                                    " ",
                                                    {
                                                        "type": "GroupNode",
                                                        "delimiters": "('{', '}')",
                                                        "children": [
                                                            {
                                                                "type": "MacroNode",
                                                                "macroname": "bf",
                                                                "args": []
                                                            },
                                                            "CSE 4190.101: Discrete Mathematics"
                                                        ]
                                                    },
                                                    "\\n         ",
                                                    {
                                                        "type": "MacroNode",
                                                        "macroname": "hfill",
                                                        "args": []
                                                    },
                                                    "#2 "
                                                ]
                                            },
                                            "\\n       ",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "vspace",
                                                "args": [
                                                    null,
                                                    {
                                                        "type": "GroupNode",
                                                        "delimiters": "('{', '}')",
                                                        "children": [
                                                            "4mm"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\\n       ",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "hbox",
                                                "args": []
                                            },
                                            "to 6in ",
                                            {
                                                "type": "GroupNode",
                                                "delimiters": "('{', '}')",
                                                "children": [
                                                    " ",
                                                    {
                                                        "type": "GroupNode",
                                                        "delimiters": "('{', '}')",
                                                        "children": [
                                                            {
                                                                "type": "MacroNode",
                                                                "macroname": "Large",
                                                                "args": []
                                                            },
                                                            {
                                                                "type": "MacroNode",
                                                                "macroname": "hfill",
                                                                "args": []
                                                            },
                                                            "#1  ",
                                                            {
                                                                "type": "MacroNode",
                                                                "macroname": "hfill",
                                                                "args": []
                                                            }
                                                        ]
                                                    },
                                                    " "
                                                ]
                                            },
                                            "\\n       ",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "vspace",
                                                "args": [
                                                    null,
                                                    {
                                                        "type": "GroupNode",
                                                        "delimiters": "('{', '}')",
                                                        "children": [
                                                            "2mm"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "\\n       ",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "hbox",
                                                "args": []
                                            },
                                            "to 6in ",
                                            {
                                                "type": "GroupNode",
                                                "delimiters": "('{', '}')",
                                                "children": [
                                                    " ",
                                                    {
                                                        "type": "GroupNode",
                                                        "delimiters": "('{', '}')",
                                                        "children": [
                                                            {
                                                                "type": "MacroNode",
                                                                "macroname": "emph",
                                                                "args": [
                                                                    {
                                                                        "type": "GroupNode",
                                                                        "delimiters": "('{', '}')",
                                                                        "children": [
                                                                            "#3"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            " ",
                                                            {
                                                                "type": "MacroNode",
                                                                "macroname": "hfill",
                                                                "args": []
                                                            },
                                                            "#4"
                                                        ]
                                                    },
                                                    " "
                                                ]
                                            },
                                            "\\n      "
                                        ]
                                    },
                                    "\\n   "
                                ]
                            },
                            "\\n   "
                        ]
                    },
                    "\\n   ",
                    {
                        "type": "MacroNode",
                        "macroname": "vspace",
                        "args": [
                            "*",
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "4mm"
                                ]
                            }
                        ]
                    },
                    "\\n"
                ]
            }
        ]
    },
    "\\n\\n",
    {
        "type": "MacroNode",
        "macroname": "newcommand",
        "args": [
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "homework",
                        "args": []
                    }
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('[', ']')",
                "children": [
                    "4"
                ]
            },
            null,
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "handout",
                        "args": []
                    },
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem Set #1"
                        ]
                    },
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "#2"
                        ]
                    },
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Instructor: #3"
                        ]
                    },
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    {
                                        "type": "MacroNode",
                                        "macroname": "bf",
                                        "args": []
                                    },
                                    "Due on:"
                                ]
                            },
                            " #4"
                        ]
                    }
                ]
            }
        ]
    },
    "\\n\\n",
    {
        "type": "EnvironmentNode",
        "environmentname": "document",
        "args": [],
        "children": [
            "\\n",
            {
                "type": "MacroNode",
                "macroname": "homework",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "1"
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "Fall 2021"
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "Yongsoo Song"
                ]
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "Oct 04, 2021"
                ]
            },
            "\\nStudent No: 2019-13674\\n\\nPlease submit your answer through eTL. It should be a ",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "single PDF"
                        ]
                    }
                ]
            },
            " file (not jpg), either typed or scanned.\\n",
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    {
                        "type": "MacroNode",
                        "macroname": "bf",
                        "args": []
                    },
                    "Please include your student ID and name (e.g. 2020-12345 YongsooSong.pdf)."
                ]
            },
            "\\nYou may discuss with other students the general approach to solve the problems, but the answers should be written in your own words. You should cite any reference that you used, and mention what you used it for. You should follow the academic integrity rules that are described in the course information.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "vspace",
                "args": [
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            ".5cm"
                        ]
                    }
                ]
            },
            "\\n",
            {
                "type": "MacroNode",
                "macroname": "hrule",
                "args": []
            },
            {
                "type": "MacroNode",
                "macroname": "vspace",
                "args": [
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            ".5cm"
                        ]
                    }
                ]
            },
            "\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 1 (5 points)"
                        ]
                    }
                ]
            },
            "\\n\\nLet the following statements be given:\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "itemize",
                "args": [
                    null
                ],
                "children": [
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "(p)"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    " ",
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": []
                    },
                    {
                        "type": "SpecialsNode",
                        "specials": "``",
                        "args": []
                    },
                    "You can install the program",
                    {
                        "type": "SpecialsNode",
                        "specials": "''",
                        "args": []
                    },
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "(q)"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    " ",
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": []
                    },
                    {
                        "type": "SpecialsNode",
                        "specials": "``",
                        "args": []
                    },
                    "Your computer has ",
                    {
                        "type": "MacroNode",
                        "macroname": "textbf",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "less"
                                ]
                            }
                        ]
                    },
                    " than 2GB of RAM",
                    {
                        "type": "SpecialsNode",
                        "specials": "''",
                        "args": []
                    },
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "(r)"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    " ",
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": []
                    },
                    {
                        "type": "SpecialsNode",
                        "specials": "``",
                        "args": []
                    },
                    "Your computer has 20GB of free disk space",
                    {
                        "type": "SpecialsNode",
                        "specials": "''",
                        "args": []
                    },
                    "\\n"
                ]
            },
            "  \\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "enumerate",
                "args": [
                    null
                ],
                "children": [
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Translate the following statement into symbols of formal logic:\\n  ",
                    {
                        "type": "EnvironmentNode",
                        "environmentname": "quote",
                        "args": [],
                        "children": [
                            "\\n  ",
                            {
                                "type": "SpecialsNode",
                                "specials": "``",
                                "args": []
                            },
                            "In order to install the program you need at least 2GB of RAM and 20GB of free disk space",
                            {
                                "type": "SpecialsNode",
                                "specials": "''",
                                "args": []
                            },
                            "\\n  "
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            " p ",
                            {
                                "type": "MacroNode",
                                "macroname": "to",
                                "args": []
                            },
                            {
                                "type": "MacroNode",
                                "macroname": "lnot",
                                "args": []
                            },
                            "q ",
                            {
                                "type": "MacroNode",
                                "macroname": "land",
                                "args": []
                            },
                            "r "
                        ]
                    },
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Give the ",
                    {
                        "type": "MacroNode",
                        "macroname": "emph",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "converse"
                                ]
                            }
                        ]
                    },
                    " of this statement in the symbols of formal logic. \\n\\n  ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            " ",
                            {
                                "type": "MacroNode",
                                "macroname": "lnot",
                                "args": []
                            },
                            "q ",
                            {
                                "type": "MacroNode",
                                "macroname": "land",
                                "args": []
                            },
                            "r ",
                            {
                                "type": "MacroNode",
                                "macroname": "to",
                                "args": []
                            },
                            "p "
                        ]
                    },
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Give the ",
                    {
                        "type": "MacroNode",
                        "macroname": "emph",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "converse"
                                ]
                            }
                        ]
                    },
                    " in English\\n\\n  If you have at least 2GB of RAM and 20GB of free disk space you can install the program.\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Give the ",
                    {
                        "type": "MacroNode",
                        "macroname": "emph",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "contrapositive"
                                ]
                            }
                        ]
                    },
                    " (of the original statement) in the symbols of formal logic\\n\\n",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            " q ",
                            {
                                "type": "MacroNode",
                                "macroname": "lor",
                                "args": []
                            },
                            {
                                "type": "MacroNode",
                                "macroname": "lnot",
                                "args": []
                            },
                            "r ",
                            {
                                "type": "MacroNode",
                                "macroname": "to",
                                "args": []
                            },
                            {
                                "type": "MacroNode",
                                "macroname": "lnot",
                                "args": []
                            },
                            "p"
                        ]
                    },
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Give the ",
                    {
                        "type": "MacroNode",
                        "macroname": "emph",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "contrapositive"
                                ]
                            }
                        ]
                    },
                    " in English\\n\\n  If your computer has less than 2GB of RAM or Your computer does not have 20GB of free disk space then you cannot install the program.\\n"
                ]
            },
            "\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 2 (5 points)"
                        ]
                    }
                ]
            },
            "\\nDetermine if the same is true for the implication operation (",
            {
                "type": "MathNode",
                "nodelist": [
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    }
                ]
            },
            ")\\ni.e., is the expression ",
            {
                "type": "MathNode",
                "nodelist": [
                    "(P",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    "Q)",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    "R"
                ]
            },
            "  logically equivalent to ",
            {
                "type": "MathNode",
                "nodelist": [
                    "P ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    "(Q ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    "R)"
                ]
            },
            "?\\nProve or disprove using the truth table method. \\n\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "table",
                "args": [
                    {
                        "type": "GroupNode",
                        "delimiters": "('[', ']')",
                        "children": [
                            "H"
                        ]
                    }
                ],
                "children": [
                    "\\n  ",
                    {
                        "type": "EnvironmentNode",
                        "environmentname": "center",
                        "args": [],
                        "children": [
                            "\\n  ",
                            {
                                "type": "EnvironmentNode",
                                "environmentname": "tabular",
                                "args": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "c c c | c | c | c | c | c | c"
                                        ]
                                    }
                                ],
                                "children": [
                                    "\\n      P ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " Q ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " R ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " ",
                                    {
                                        "type": "MathNode",
                                        "nodelist": [
                                            "(P",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "to",
                                                "args": []
                                            },
                                            "Q)"
                                        ]
                                    },
                                    " ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " R ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " ",
                                    {
                                        "type": "MathNode",
                                        "nodelist": [
                                            "(P",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "to",
                                                "args": []
                                            },
                                            "Q)",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "to",
                                                "args": []
                                            },
                                            "R"
                                        ]
                                    },
                                    " ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " ",
                                    {
                                        "type": "MathNode",
                                        "nodelist": [
                                            "(Q",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "to",
                                                "args": []
                                            },
                                            "R)"
                                        ]
                                    },
                                    " ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " ",
                                    {
                                        "type": "MathNode",
                                        "nodelist": [
                                            "P",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "to",
                                                "args": []
                                            },
                                            "(Q",
                                            {
                                                "type": "MacroNode",
                                                "macroname": "to",
                                                "args": []
                                            },
                                            "R)"
                                        ]
                                    },
                                    " ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " same ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    "\\n      ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "hline",
                                        "args": []
                                    },
                                    "0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " False ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    " \\n      0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " True ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    " \\n      0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " False ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    " \\n      0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " True ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    " \\n      1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " True ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    " \\n      1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " True ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    " \\n      1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 0 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " True ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    " \\n      1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " 1 ",
                                    {
                                        "type": "SpecialsNode",
                                        "specials": "&",
                                        "args": []
                                    },
                                    " True ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "\\",
                                        "args": [
                                            null,
                                            null
                                        ]
                                    },
                                    " \\n      ",
                                    {
                                        "type": "MacroNode",
                                        "macroname": "hline",
                                        "args": []
                                    }
                                ]
                            },
                            "\\n  "
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "caption",
                        "args": []
                    },
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            {
                                "type": "MacroNode",
                                "macroname": "label",
                                "args": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "tab:table-name"
                                        ]
                                    }
                                ]
                            },
                            " truth table"
                        ]
                    },
                    "\\n"
                ]
            },
            "\\n\\nThey are not equivalent.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 3 (5 points)"
                        ]
                    }
                ]
            },
            "\\nConstruct a compound proposition that asserts that every cell of a ",
            {
                "type": "MathNode",
                "nodelist": [
                    "9 ",
                    {
                        "type": "MacroNode",
                        "macroname": "times",
                        "args": []
                    },
                    "9"
                ]
            },
            " Sudoku puzzle contains at least one number (using the propositions ",
            {
                "type": "MathNode",
                "nodelist": [
                    "p(i,j,n)"
                ]
            },
            " defined in the lecture note).\\n\\n",
            {
                "type": "MathNode",
                "nodelist": [
                    {
                        "type": "MacroNode",
                        "macroname": "bigwedge",
                        "args": []
                    },
                    "_",
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "i=1"
                        ]
                    },
                    "^9",
                    {
                        "type": "MacroNode",
                        "macroname": "bigwedge",
                        "args": []
                    },
                    "_",
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "j=1"
                        ]
                    },
                    "^9",
                    {
                        "type": "MacroNode",
                        "macroname": "bigvee",
                        "args": []
                    },
                    "_",
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "n=1"
                        ]
                    },
                    "^9 p(i,j,n)"
                ]
            },
            "\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 4 (10 points)"
                        ]
                    }
                ]
            },
            "\\n\\nYou are on a treasure island, and find a note with the following hints:\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "enumerate",
                "args": [
                    null
                ],
                "children": [
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "If this house is next to a lake, then the treasure is not in the kitchen\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "If the tree in the front yard is an elm, then the treasure is in the kitchen\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "This house is next to a lake\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Either the tree in the front yard is an elm or the treasure is not buried under the flagpole\\n  (or both. This ",
                    {
                        "type": "SpecialsNode",
                        "specials": "``",
                        "args": []
                    },
                    "or",
                    {
                        "type": "SpecialsNode",
                        "specials": "''",
                        "args": []
                    },
                    " is inclusive.)\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "The treasure is either under the flagpole or in the garage.\\n  (but not both. This is an exclusive or, there is only one treasure!)\\n"
                ]
            },
            "\\n\\nIn order to find where the treasure is, do the following:\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "paragraph",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "(a)"
                ]
            },
            "\\nIdentify 5 atomic statements that can be used to express the above statements in logical form. (Atomic statements should ",
            {
                "type": "MacroNode",
                "macroname": "textbf",
                "args": [
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "not"
                        ]
                    }
                ]
            },
            " contain any\\nword corresponding to a logical connective.)\\nList the 5 statements in the order in which they \\nappear in the above messages, and call them ",
            {
                "type": "MathNode",
                "nodelist": [
                    "L,K,E,P,G"
                ]
            },
            ". Express each of the above compound statements (1-5) using ",
            {
                "type": "MathNode",
                "nodelist": [
                    "L,K,E,P,G"
                ]
            },
            " and \\nlogical connectives.\\n\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "enumerate",
                "args": [
                    null
                ],
                "children": [
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            {
                                                "type": "GroupNode",
                                                "delimiters": "('{', '}')",
                                                "children": [
                                                    "L"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    " This house is next to a lake.\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            {
                                                "type": "GroupNode",
                                                "delimiters": "('{', '}')",
                                                "children": [
                                                    "K"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    " The treasure is in the kitchen.\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            {
                                                "type": "GroupNode",
                                                "delimiters": "('{', '}')",
                                                "children": [
                                                    "E"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    " The tree in the front yard is an elm.\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            {
                                                "type": "GroupNode",
                                                "delimiters": "('{', '}')",
                                                "children": [
                                                    "P"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    " The treasure is buried under the flagpole.\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            {
                                                "type": "GroupNode",
                                                "delimiters": "('{', '}')",
                                                "children": [
                                                    "G"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    " The treasure is in the garage.\\n"
                ]
            },
            "\\n\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "enumerate",
                "args": [
                    null
                ],
                "children": [
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "L ",
                            {
                                "type": "MacroNode",
                                "macroname": "to",
                                "args": []
                            },
                            {
                                "type": "MacroNode",
                                "macroname": "lnot",
                                "args": []
                            },
                            "K"
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "E ",
                            {
                                "type": "MacroNode",
                                "macroname": "to",
                                "args": []
                            },
                            "K"
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "L"
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "E ",
                            {
                                "type": "MacroNode",
                                "macroname": "lor",
                                "args": []
                            },
                            {
                                "type": "MacroNode",
                                "macroname": "lnot",
                                "args": []
                            },
                            "P"
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "P ",
                            {
                                "type": "MacroNode",
                                "macroname": "oplus",
                                "args": []
                            },
                            "G "
                        ]
                    },
                    "\\n"
                ]
            },
            "\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "paragraph",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "(b)"
                ]
            },
            " Determine where the treasure is, and justify your answer.\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "align",
                "args": [],
                "children": [
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " L ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "text",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "by 3"
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " L ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "K ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "text",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "by 1"
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "K ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "E ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "text",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "by contrapositive of 2"
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "E ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "P ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "text",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "by 4"
                                ]
                            }
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "P ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    "G ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "text",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "by 5"
                                ]
                            }
                        ]
                    },
                    "\\n"
                ]
            },
            "\\n",
            {
                "type": "MathNode",
                "nodelist": [
                    "L ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "K ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "E ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "lnot",
                        "args": []
                    },
                    "P ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    "G"
                ]
            },
            "\\n\\nGarage.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 5 (10 points)"
                        ]
                    }
                ]
            },
            "\\n\\nLet ",
            {
                "type": "MathNode",
                "nodelist": [
                    "D = ",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "-48,-14,-8,0,1,3,16,23,26,32,36",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    }
                ]
            },
            ".\\nDetermine which of the following statements are true and which are false.\\nProvide a counterexample for the statements that are false.\\nIn all statements, the variables ",
            {
                "type": "MathNode",
                "nodelist": [
                    "x,y"
                ]
            },
            " range over the set ",
            {
                "type": "MathNode",
                "nodelist": [
                    "D"
                ]
            },
            ".\\n\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "enumerate",
                "args": [
                    null
                ],
                "children": [
                    "\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            {
                                "type": "MacroNode",
                                "macroname": "forall",
                                "args": []
                            },
                            "x"
                        ]
                    },
                    ", if ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "x"
                        ]
                    },
                    " is odd then ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "x>0"
                        ]
                    },
                    ".\\n  True.\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            {
                                "type": "MacroNode",
                                "macroname": "forall",
                                "args": []
                            },
                            "x"
                        ]
                    },
                    ", if ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "x<0"
                        ]
                    },
                    " then ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "x"
                        ]
                    },
                    " is even\\n  True.\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            {
                                "type": "MacroNode",
                                "macroname": "forall",
                                "args": []
                            },
                            "x"
                        ]
                    },
                    ", ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            {
                                "type": "MacroNode",
                                "macroname": "exists",
                                "args": []
                            },
                            "y"
                        ]
                    },
                    " such that ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "y > x"
                        ]
                    },
                    "\\n  False; x = 36\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            {
                                "type": "MacroNode",
                                "macroname": "forall",
                                "args": []
                            },
                            "x"
                        ]
                    },
                    ", (",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "x"
                        ]
                    },
                    " is even or ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            {
                                "type": "MacroNode",
                                "macroname": "exists",
                                "args": []
                            },
                            "y, y>x"
                        ]
                    },
                    ")\\n  True\\n",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    {
                        "type": "MathNode",
                        "nodelist": [
                            {
                                "type": "MacroNode",
                                "macroname": "forall",
                                "args": []
                            },
                            "x"
                        ]
                    },
                    ", (",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "x"
                        ]
                    },
                    " is odd  or ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            {
                                "type": "MacroNode",
                                "macroname": "exists",
                                "args": []
                            },
                            "y, y>x"
                        ]
                    },
                    ")\\n  False; x = 36\\n"
                ]
            },
            "\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 6 (5 points)"
                        ]
                    }
                ]
            },
            "\\n\\nProve the following statement by contraposition:\\n\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "quote",
                "args": [],
                "children": [
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "``",
                        "args": []
                    },
                    "For any integer ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "n"
                        ]
                    },
                    ", if ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "(n^2+n+1)"
                        ]
                    },
                    " is even, then ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "n"
                        ]
                    },
                    " is odd.",
                    {
                        "type": "SpecialsNode",
                        "specials": "''",
                        "args": []
                    },
                    "\\n"
                ]
            },
            "\\n\\ncontraposition:\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "quote",
                "args": [],
                "children": [
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "``",
                        "args": []
                    },
                    "For any integer ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "n"
                        ]
                    },
                    ", if ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "n"
                        ]
                    },
                    " is even, then ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "(n^2+n+1)"
                        ]
                    },
                    " is odd.",
                    {
                        "type": "SpecialsNode",
                        "specials": "''",
                        "args": []
                    },
                    "\\n"
                ]
            },
            "\\n\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "align*",
                "args": [],
                "children": [
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "text",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "let "
                                ]
                            }
                        ]
                    },
                    " n = 2k, k ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "Z"
                                ]
                            }
                        ]
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " n^2 + n + 1  ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    "= (2k)^2 + 2k + 1 ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    "= 2(2k^2 + k) + 1 ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "text",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "is odd."
                                ]
                            }
                        ]
                    },
                    "\\n"
                ]
            },
            "\\n\\n\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 7 (10 points)"
                        ]
                    }
                ]
            },
            " Suppose that ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a"
                ]
            },
            ", ",
            {
                "type": "MathNode",
                "nodelist": [
                    "b"
                ]
            },
            " and ",
            {
                "type": "MathNode",
                "nodelist": [
                    "c"
                ]
            },
            "  are odd integers. Assume that a real number ",
            {
                "type": "MathNode",
                "nodelist": [
                    "x"
                ]
            },
            " satisfies the equation ",
            {
                "type": "MathNode",
                "nodelist": [
                    "ax^2+bx+c=0"
                ]
            },
            ". Prove by contradiction that ",
            {
                "type": "MathNode",
                "nodelist": [
                    "x"
                ]
            },
            " is irrational.\\n\\nSuppose that the root ",
            {
                "type": "MathNode",
                "nodelist": [
                    "x"
                ]
            },
            " is rational. ",
            {
                "type": "MathNode",
                "nodelist": [
                    "x = ",
                    {
                        "type": "MacroNode",
                        "macroname": "frac",
                        "args": [
                            "p",
                            "q"
                        ]
                    },
                    ", p, q ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "Z"
                                ]
                            }
                        ]
                    },
                    ", GCD(p, q) = 1"
                ]
            },
            "\\nThen \\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "align*",
                "args": [],
                "children": [
                    "\\n  ax^2 + bx + c ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  = a",
                    {
                        "type": "MacroNode",
                        "macroname": "left",
                        "args": []
                    },
                    "(",
                    {
                        "type": "MacroNode",
                        "macroname": "frac",
                        "args": [
                            "p",
                            "q"
                        ]
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "right",
                        "args": []
                    },
                    ")^2 + b",
                    {
                        "type": "MacroNode",
                        "macroname": "left",
                        "args": []
                    },
                    "(",
                    {
                        "type": "MacroNode",
                        "macroname": "frac",
                        "args": [
                            "p",
                            "q"
                        ]
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "right",
                        "args": []
                    },
                    ") + c ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  = a",
                    {
                        "type": "MacroNode",
                        "macroname": "frac",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "p^2"
                                ]
                            },
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "q^2"
                                ]
                            }
                        ]
                    },
                    " + b",
                    {
                        "type": "MacroNode",
                        "macroname": "frac",
                        "args": [
                            "p",
                            "q"
                        ]
                    },
                    " + c ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    "= 0 ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "therefore",
                        "args": []
                    },
                    "ap^2 + bpq + cq^2 ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    "= 0\\n"
                ]
            },
            "\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "itemize",
                "args": [
                    null
                ],
                "children": [
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Let p is odd and q is odd. Then ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "ap^2"
                        ]
                    },
                    " is odd, ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "bpq"
                        ]
                    },
                    " is odd, and ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "cq^2"
                        ]
                    },
                    " is odd, ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "ap^2 + bpq + cq^2"
                        ]
                    },
                    " is odd. and 0 is not odd. contradiction.\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Let p is odd and q is even. Then ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "ap^2"
                        ]
                    },
                    " is odd, ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "bpq"
                        ]
                    },
                    " is even and ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "cq^2"
                        ]
                    },
                    " is even, ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "ap^2 + bpq + cq^2"
                        ]
                    },
                    " is odd. and 0 is not odd. contradiction.\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Let p is even and q is even. ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "GCD(p, q) ",
                            {
                                "type": "MacroNode",
                                "macroname": "neq",
                                "args": []
                            },
                            "1"
                        ]
                    },
                    ". contradiction.\\n"
                ]
            },
            "\\nEvery 3 cases have contradictions. So ",
            {
                "type": "MathNode",
                "nodelist": [
                    "x"
                ]
            },
            " is not rational.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 8 (10 points)"
                        ]
                    }
                ]
            },
            " Prove or disprove that you can tile a ",
            {
                "type": "MathNode",
                "nodelist": [
                    "10 ",
                    {
                        "type": "MacroNode",
                        "macroname": "times",
                        "args": []
                    },
                    "10"
                ]
            },
            " checkerboard using straight tetrominoes.\\n\ubcf4\ub4dc\ub97c \ub124 \uac00\uc9c0 \uc0c9\uc73c\ub85c \uc0c9\uce60\ud55c\ub2e4. 2 x 2 \uc601\uc5ed\uc744 \ub193\uc558\uc744 \ub54c, \uc2dc\uacc4\ubc29\ud5a5\uc73c\ub85c Yellow Red Blue Green \uc774\ub807\uac8c \ub124 \uac1c\uc758 \uc0c9\uc73c\ub85c \uc0c9\uce60\uc774 \ub418\uc5b4 \uc788\ub2e4. \uc774 2 x 2 \uc601\uc5ed\uc774 \uac00\ub85c 5\uac1c \uc138\ub85c 5\uac1c \ucd1d 25\uac1c\uc758 \ud328\uce58\uac00 \uc788\ub2e4. \uac01 \uc0c9\uc740 25\uac1c\uc529\uc774\ub2e4. \uadc0\ud241\uc774\ub294 \uac01\uac01 Yellow Red Green Blue\ub85c \ucc44\uc6cc\uc838 \uc788\ub2e4.\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "figure",
                "args": [
                    {
                        "type": "GroupNode",
                        "delimiters": "('[', ']')",
                        "children": [
                            "H"
                        ]
                    }
                ],
                "children": [
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "includegraphics",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('[', ']')",
                                "children": [
                                    "width=8cm"
                                ]
                            },
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "checkboard.png"
                                ]
                            }
                        ]
                    },
                    "\\n"
                ]
            },
            "\\n\uc774 \uc0c1\ud0dc\uc5d0\uc11c \ud14c\ud2b8\ub85c\ubbf8\ub178\ub97c \ub193\ub294\ub2e4. \uc5b4\ub5a4 \ud14c\ud2b8\ub85c\ubbf8\ub178\ub294 Yellow 2\uac1c Red 2\uac1c, \uc5b4\ub5a4 \ud14c\ud2b8\ub85c\ubbf8\ub178\ub294 Green \ub450 \uac1c, Blue \ub450 \uac1c, \uc5b4\ub5a4 \ud14c\ud2b8\ub85c\ubbf8\ub178\ub294 Yellow 2\uac1c, Green \ub450 \uac1c, \uc5b4\ub5a4 \ud14c\ud2b8\ub85c\ubbf8\ub178\ub294 Red \ub450 \uac1c, Blue \ub450 \uac1c\ub97c \ub36e\uc744 \uc218 \uc788\ub2e4. \uc774\uc678\uc758 \uacbd\uc6b0\ub294 \uc5c6\ub2e4.\\n\uc774 \uacbd\uc6b0 \uac01 \uc0c9\uc740 25\uac1c\uc529\uc778\ub370, \uac01\uac01\uc758 \ud14c\ud2b8\ub85c\ubbf8\ub178\ub294 \uac01 \uc0c9 \ub2f9 \ub450 \uac1c\uc529\uc758 \uc601\uc5ed\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\ub2e4. \uc989 \ud14c\ud2b8\ub85c\ubbf8\ub178\ub4e4\ub85c \uc9dd\uc218 \uac1c\uc758 \uc0c9\ub4e4\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294\ub370 \uac01 \uc0c9\uc740 25\uac1c\uc529\uc774\ubbc0\ub85c \uc808\ub300\ub85c \uccb4\ucee4\ubcf4\ub4dc\ub97c \uccb4\uc6b8 \uc218 \uc5c6\ub2e4.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 9 (10 points)"
                        ]
                    }
                ]
            },
            "\\n\\nFor each of the following statements, determine if it is true or false.\\nIf true, prove it. Otherwise, disprove it by giving a counterexample.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "paragraph",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "(a)"
                ]
            },
            "\\nFor any sets ",
            {
                "type": "MathNode",
                "nodelist": [
                    "A,B,C"
                ]
            },
            ", if ",
            {
                "type": "MathNode",
                "nodelist": [
                    "A",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "C ",
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    "B",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "C"
                ]
            },
            ", then ",
            {
                "type": "MathNode",
                "nodelist": [
                    "A ",
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    "B"
                ]
            },
            ".\\n\\n",
            {
                "type": "CommentNode",
                "comment": " \\begin{align}"
            },
            {
                "type": "CommentNode",
                "comment": "   & x \\in A \\lor x \\in C \\rightarrow x \\in B \\lor x \\in C \\\\"
            },
            {
                "type": "CommentNode",
                "comment": "   \\Leftrightarrow & \\lnot (x \\in A \\lor x \\in C) \\lor (x \\in B \\lor x \\in C) \\\\"
            },
            {
                "type": "CommentNode",
                "comment": "   \\Leftrightarrow & (x \\notin A \\land x \\notin C) \\lor (x \\in B \\lor x \\in C)"
            },
            {
                "type": "CommentNode",
                "comment": " \\end{align}"
            },
            "counterexample\\n",
            {
                "type": "MathNode",
                "nodelist": [
                    "x ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "A ",
                    {
                        "type": "MacroNode",
                        "macroname": "land",
                        "args": []
                    },
                    "x ",
                    {
                        "type": "MacroNode",
                        "macroname": "notin",
                        "args": []
                    },
                    "B ",
                    {
                        "type": "MacroNode",
                        "macroname": "land",
                        "args": []
                    },
                    "x ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "C"
                ]
            },
            " \\n\\n",
            {
                "type": "MacroNode",
                "macroname": "paragraph",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "(b)"
                ]
            },
            "\\nFor any sets ",
            {
                "type": "MathNode",
                "nodelist": [
                    "A,B,C"
                ]
            },
            ", if ",
            {
                "type": "MathNode",
                "nodelist": [
                    "A",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "C ",
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    "B",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "C"
                ]
            },
            " and ",
            {
                "type": "MathNode",
                "nodelist": [
                    "A",
                    {
                        "type": "MacroNode",
                        "macroname": "cap",
                        "args": []
                    },
                    "C ",
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    "B",
                    {
                        "type": "MacroNode",
                        "macroname": "cap",
                        "args": []
                    },
                    "C"
                ]
            },
            ",\\nthen ",
            {
                "type": "MathNode",
                "nodelist": [
                    "A ",
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    "B"
                ]
            },
            ".\\n\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "align*",
                "args": [],
                "children": [
                    "\\n  A ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    "= A",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "(A ",
                    {
                        "type": "MacroNode",
                        "macroname": "cap",
                        "args": []
                    },
                    "C) ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    "A",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "(B",
                    {
                        "type": "MacroNode",
                        "macroname": "cap",
                        "args": []
                    },
                    "C) ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    "=(A ",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "B)",
                    {
                        "type": "MacroNode",
                        "macroname": "cap",
                        "args": []
                    },
                    "(A",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "C) ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    "(A",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "B)",
                    {
                        "type": "MacroNode",
                        "macroname": "cap",
                        "args": []
                    },
                    "(B",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "C) ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    "= B",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "(A ",
                    {
                        "type": "MacroNode",
                        "macroname": "cap",
                        "args": []
                    },
                    "C) ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    "B",
                    {
                        "type": "MacroNode",
                        "macroname": "cup",
                        "args": []
                    },
                    "(B",
                    {
                        "type": "MacroNode",
                        "macroname": "cap",
                        "args": []
                    },
                    "C) ",
                    {
                        "type": "MacroNode",
                        "macroname": "\\",
                        "args": [
                            null,
                            null
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "SpecialsNode",
                        "specials": "&",
                        "args": []
                    },
                    "= B\\n"
                ]
            },
            "\\n\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 10 (10 points)"
                        ]
                    }
                ]
            },
            "\\nLet ",
            {
                "type": "MathNode",
                "nodelist": [
                    "F"
                ]
            },
            " be the set of all nonempty finite sets of integers, and let ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f: F",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "Z"
                                ]
                            }
                        ]
                    }
                ]
            },
            "\\nbe the function ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f(S) = ",
                    {
                        "type": "MacroNode",
                        "macroname": "sum",
                        "args": []
                    },
                    "_",
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "x",
                            {
                                "type": "MacroNode",
                                "macroname": "in",
                                "args": []
                            },
                            "S"
                        ]
                    },
                    " x"
                ]
            },
            " mapping each set to the sum of its elements.\\nSo, for example, ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f(",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "1,-7,9",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    },
                    ") = 3"
                ]
            },
            ".\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "paragraph",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "(a)"
                ]
            },
            " Determine if ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f"
                ]
            },
            " is surjective, and prove your answer.\\n\\nFor any ",
            {
                "type": "MathNode",
                "nodelist": [
                    "z ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "Z"
                                ]
                            }
                        ]
                    }
                ]
            },
            ", there exists ",
            {
                "type": "MathNode",
                "nodelist": [
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "z",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    },
                    " ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "F"
                ]
            },
            " s. t. ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f(",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "z",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    },
                    ") = z."
                ]
            },
            "\\nSo f is surjective.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "paragraph",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "(b)"
                ]
            },
            " Determine if ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f"
                ]
            },
            " is injective, and prove your answer.\\n",
            {
                "type": "MathNode",
                "nodelist": [
                    "f(",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "1, 4",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    },
                    ") = f( ",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "2, 3",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    },
                    ") = 5"
                ]
            },
            "\\nf is not injective.\\n\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 11 (10 points)"
                        ]
                    }
                ]
            },
            "\\n\\nLet ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f: ",
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "N"
                                ]
                            }
                        ]
                    },
                    "^2 ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "Z"
                                ]
                            }
                        ]
                    }
                ]
            },
            " be the function ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f(x,y) = x-y"
                ]
            },
            ",\\nwhere ",
            {
                "type": "MathNode",
                "nodelist": [
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "N"
                                ]
                            }
                        ]
                    },
                    " = ",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "1,2,3,4,",
                    {
                        "type": "MacroNode",
                        "macroname": "ldots",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    }
                ]
            },
            " is the set of positive integers.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "paragraph",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "(a)"
                ]
            },
            "\\nShow that ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f: ",
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "N"
                                ]
                            }
                        ]
                    },
                    "^2 ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "Z"
                                ]
                            }
                        ]
                    }
                ]
            },
            " is not a bijection.\\n(x, y) \uac00 (2, 1) , (3, 2)\uc774\uba74 \ub458 \ub2e4 \ud568\uc22b\uac12\uc774 1\uc774\ub2e4. \uadf8\ub798\uc11c injective\uac00 \uc544\ub2c8\ub2e4.\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "paragraph",
                "args": []
            },
            {
                "type": "GroupNode",
                "delimiters": "('{', '}')",
                "children": [
                    "(b)"
                ]
            },
            "\\nGive a subset ",
            {
                "type": "MathNode",
                "nodelist": [
                    "S ",
                    {
                        "type": "MacroNode",
                        "macroname": "subseteq",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "N"
                                ]
                            }
                        ]
                    },
                    "^2"
                ]
            },
            " such that\\n",
            {
                "type": "MathNode",
                "nodelist": [
                    "f: S ",
                    {
                        "type": "MacroNode",
                        "macroname": "to",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "mathbb",
                        "args": [
                            {
                                "type": "GroupNode",
                                "delimiters": "('{', '}')",
                                "children": [
                                    "Z"
                                ]
                            }
                        ]
                    }
                ]
            },
            " is a bijection, and prove the\\ncorrectness of your answer.\\n",
            {
                "type": "MathNode",
                "nodelist": [
                    " S = ",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "(1, 1), (1, 2), (1, 3), ",
                    {
                        "type": "MacroNode",
                        "macroname": "cdots",
                        "args": []
                    },
                    ", (2, 1), (3, 1), (4, 1) ",
                    {
                        "type": "MacroNode",
                        "macroname": "cdots",
                        "args": []
                    },
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    },
                    " "
                ]
            },
            "\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "itemize",
                "args": [
                    null
                ],
                "children": [
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Injective:\\n   For ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "a ",
                            {
                                "type": "MacroNode",
                                "macroname": "neq",
                                "args": []
                            },
                            "b ",
                            {
                                "type": "MacroNode",
                                "macroname": "in",
                                "args": []
                            },
                            {
                                "type": "MacroNode",
                                "macroname": "mathbb",
                                "args": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "N"
                                        ]
                                    }
                                ]
                            },
                            " "
                        ]
                    },
                    "\\n   ",
                    {
                        "type": "EnvironmentNode",
                        "environmentname": "align",
                        "args": [],
                        "children": [
                            "\\n    ",
                            {
                                "type": "SpecialsNode",
                                "specials": "&",
                                "args": []
                            },
                            " f(1, a) = 1 -a ",
                            {
                                "type": "MacroNode",
                                "macroname": "neq",
                                "args": []
                            },
                            "f(1, b) = 1 - b ",
                            {
                                "type": "MacroNode",
                                "macroname": "\\",
                                "args": [
                                    null,
                                    null
                                ]
                            },
                            "\\n    ",
                            {
                                "type": "SpecialsNode",
                                "specials": "&",
                                "args": []
                            },
                            " f(a, 1) = a - 1 ",
                            {
                                "type": "MacroNode",
                                "macroname": "neq",
                                "args": []
                            },
                            "f(b, 1) = b - 1\\n   "
                        ]
                    },
                    "\\n  ",
                    {
                        "type": "MacroNode",
                        "macroname": "item",
                        "args": [
                            null
                        ]
                    },
                    "Surjective:\\n   For ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "z ",
                            {
                                "type": "MacroNode",
                                "macroname": "in",
                                "args": []
                            },
                            {
                                "type": "MacroNode",
                                "macroname": "mathbb",
                                "args": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "Z"
                                        ]
                                    }
                                ]
                            },
                            "  s. t. f(a, b) = a -b = z, (a, b) ",
                            {
                                "type": "MacroNode",
                                "macroname": "in",
                                "args": []
                            },
                            {
                                "type": "MacroNode",
                                "macroname": "mathbb",
                                "args": [
                                    {
                                        "type": "GroupNode",
                                        "delimiters": "('{', '}')",
                                        "children": [
                                            "S"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    ", When ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "z > 0"
                        ]
                    },
                    ", ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "a = z+1"
                        ]
                    },
                    ", ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "b = 1"
                        ]
                    },
                    ". When ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "z = 0"
                        ]
                    },
                    ", ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "a = 1"
                        ]
                    },
                    ", ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "b = 1"
                        ]
                    },
                    ". When  ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "z < 0"
                        ]
                    },
                    ", ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "a = 1"
                        ]
                    },
                    ", ",
                    {
                        "type": "MathNode",
                        "nodelist": [
                            "b = 1 - z"
                        ]
                    },
                    ".\\n\\n"
                ]
            },
            "\\n\\n",
            {
                "type": "MacroNode",
                "macroname": "section",
                "args": [
                    "*",
                    null,
                    {
                        "type": "GroupNode",
                        "delimiters": "('{', '}')",
                        "children": [
                            "Problem 12 (10 points)"
                        ]
                    }
                ]
            },
            "\\n\\nShow that if ",
            {
                "type": "MathNode",
                "nodelist": [
                    "S"
                ]
            },
            " is a set, then there does not exist an onto function ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f"
                ]
            },
            " from ",
            {
                "type": "MathNode",
                "nodelist": [
                    "S"
                ]
            },
            " to ",
            {
                "type": "MathNode",
                "nodelist": [
                    "P",
                    {
                        "type": "MacroNode",
                        "macroname": "mathcal",
                        "args": [
                            "P"
                        ]
                    },
                    "(S)"
                ]
            },
            ", the power set of ",
            {
                "type": "MathNode",
                "nodelist": [
                    "S"
                ]
            },
            ". Conclude\\nthat ",
            {
                "type": "MathNode",
                "nodelist": [
                    "|S| < |",
                    {
                        "type": "MacroNode",
                        "macroname": "mathcal",
                        "args": [
                            "P"
                        ]
                    },
                    "(S)|"
                ]
            },
            ". [Hint: Suppose such a function ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f"
                ]
            },
            " existed and consider the set ",
            {
                "type": "MathNode",
                "nodelist": [
                    "T = ",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "s ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "S | s  ",
                    {
                        "type": "MacroNode",
                        "macroname": "notin",
                        "args": []
                    },
                    "f (s) ",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    }
                ]
            },
            ".]\\n\\n",
            {
                "type": "EnvironmentNode",
                "environmentname": "lstlisting",
                "args": [],
                "children": [
                    "\\n  val S: Set<Number>\\n  fun f (v : Number) : Set<Number>\\n  val PS : Set<Set<Number>>\\n  val T: Set<Number>\\n  val a : Number\\n"
                ]
            },
            "\\n\\nSuppose such a function ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f"
                ]
            },
            " existed and consider the set ",
            {
                "type": "MathNode",
                "nodelist": [
                    "T = ",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "s ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "S | s  ",
                    {
                        "type": "MacroNode",
                        "macroname": "notin",
                        "args": []
                    },
                    "f (s) ",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    }
                ]
            },
            " (",
            {
                "type": "MathNode",
                "nodelist": [
                    "T = ",
                    {
                        "type": "MacroNode",
                        "macroname": "{",
                        "args": []
                    },
                    "s | s ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "S ",
                    {
                        "type": "MacroNode",
                        "macroname": "land",
                        "args": []
                    },
                    "s ",
                    {
                        "type": "MacroNode",
                        "macroname": "notin",
                        "args": []
                    },
                    "f(s)",
                    {
                        "type": "MacroNode",
                        "macroname": "}",
                        "args": []
                    }
                ]
            },
            "). ",
            {
                "type": "MathNode",
                "nodelist": [
                    "T ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "P",
                    {
                        "type": "MacroNode",
                        "macroname": "mathcal",
                        "args": [
                            "P"
                        ]
                    },
                    "(S)"
                ]
            },
            ". However, there is no ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "S"
                ]
            },
            " such that ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f(a) = T"
                ]
            },
            ".\\nIf ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "T"
                ]
            },
            ", ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "notin",
                        "args": []
                    },
                    "f(a)"
                ]
            },
            ". So ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f(a) ",
                    {
                        "type": "MacroNode",
                        "macroname": "neq",
                        "args": []
                    },
                    "T"
                ]
            },
            ", because ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "T"
                ]
            },
            " but ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "notin",
                        "args": []
                    },
                    "f(a)"
                ]
            },
            "\\nIf ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "notin",
                        "args": []
                    },
                    "T"
                ]
            },
            ", ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "f(a)"
                ]
            },
            ". So ",
            {
                "type": "MathNode",
                "nodelist": [
                    "f(a) ",
                    {
                        "type": "MacroNode",
                        "macroname": "neq",
                        "args": []
                    },
                    "T"
                ]
            },
            ", because ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "f(a)"
                ]
            },
            " but ",
            {
                "type": "MathNode",
                "nodelist": [
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "notin",
                        "args": []
                    },
                    "T"
                ]
            },
            ".\\nSo ",
            {
                "type": "MathNode",
                "nodelist": [
                    "T ",
                    {
                        "type": "MacroNode",
                        "macroname": "neq",
                        "args": []
                    },
                    "f(a) ",
                    {
                        "type": "MacroNode",
                        "macroname": "forall",
                        "args": []
                    },
                    "a ",
                    {
                        "type": "MacroNode",
                        "macroname": "in",
                        "args": []
                    },
                    "S)"
                ]
            },
            ". So f is not surjective.  \\n\\n"
        ]
    }
]